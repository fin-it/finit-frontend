name: FIN.IT API

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.APPLICATION }}/${{ secrets.APPLICATION }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PORT: ${{ secrets.PORT }}
      
    steps:
      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          
      - name: Configure Docker Authorization
        run: gcloud auth configure-docker --quiet

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME .

      - name: Authenticate Docker to Artifact Registry
        run: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us-central1-docker.pkg.dev

      - name: Push Docker Image to Artifact Registry
        run: docker push $IMAGE_NAME

      - name: Deploy Docker Image to Google Cloud Run
        run: |
            gcloud run deploy ${{ secrets.APPLICATION }} \
              --image $IMAGE_NAME \
              --region asia-southeast2 \
              --platform managed \
              --allow-unauthenticated \
              --port 8080 \
              --set-env-vars="DB_NAME=${{ secrets.DB_NAME }}, DB_USERNAME=${{ secrets.DB_USERNAME }}, DB_PASSWORD=${{ secrets.DB_PASSWORD }}, DB_HOST=${{ secrets.DB_HOST }}, JWT_SECRET=${{ secrets.JWT_SECRET }}, PORT=${{ secrets.PORT }}"
